{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getVariable, removeVariable } from \"./utils/validation\";\nimport Home from \"./Screens/Home\";\nimport Login from \"./Screens/LoginScreen\";\nimport Registration from \"./Screens/RegistrationScreen\";\nimport PostsScreen from \"./components/PostsScreen\";\nimport CreatePostsScreen from \"./Screens/CreatePostsScreen\";\nimport CommentsScreen from \"./Screens/CommentsScreen\";\nimport ProfileScreen from \"./Screens/ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createStackNavigator();\nvar AuthNavigator = function AuthNavigator() {\n  return _jsxs(AuthStack.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(AuthStack.Screen, {\n      name: \"Registration\",\n      component: Registration\n    }), _jsx(AuthStack.Screen, {\n      name: \"Login\",\n      component: Login\n    })]\n  });\n};\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === \"Profile\") {\n            iconName = focused ? \"ios-person\" : \"ios-person\";\n          } else if (route.name === \"Add\") {\n            iconName = focused ? \"ios-add-circle\" : \"ios-add-circle-outline\";\n          } else if (route.name === \"Posts\") {\n            iconName = focused ? \"ios-grid\" : \"ios-grid\";\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"gray\"\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Posts\",\n      component: PostsScreen,\n      options: {\n        title: \"Публікації\",\n        headerStyle: {\n          backgroundColor: \"#fff\"\n        },\n        headerTintColor: \"#212121\",\n        headerTitleStyle: {\n          fontWeight: \"500\",\n          fontSize: 18,\n          letterSpacing: -0.4\n        },\n        headerRight: function headerRight() {\n          return _jsx(Ionicons, {\n            name: \"ios-log-out\",\n            size: 25,\n            color: \"grey\",\n            style: {\n              marginRight: 25\n            },\n            onPress: function onPress() {\n              removeVariable(\"entrance\");\n            }\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Add\",\n      component: CreatePostsScreen,\n      options: {\n        title: \"Створити публікацію\",\n        headerStyle: {\n          backgroundColor: \"#fff\"\n        },\n        headerTintColor: \"#212121\",\n        headerTitleStyle: {\n          fontWeight: \"500\",\n          fontSize: 18,\n          letterSpacing: -0.4\n        },\n        headerLeft: function headerLeft() {\n          return _jsx(Ionicons, {\n            name: \"ios-arrow-back\",\n            size: 25,\n            color: \"grey\",\n            style: {\n              marginLeft: 25\n            }\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\nvar App = function App() {\n  var isLoggedIn = getVariable(\"entrance\");\n  return _jsx(NavigationContainer, {\n    children: isLoggedIn ? _jsx(TabNavigator, {}) : _jsx(AuthNavigator, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["NavigationContainer","createStackNavigator","createBottomTabNavigator","useNavigation","Ionicons","getVariable","removeVariable","Home","Login","Registration","PostsScreen","CreatePostsScreen","CommentsScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","AuthStack","AuthNavigator","Navigator","initialRouteName","screenOptions","headerShown","children","Screen","name","component","Tab","TabNavigator","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","tabBarOptions","activeTintColor","inactiveTintColor","options","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","letterSpacing","headerRight","style","marginRight","onPress","headerLeft","marginLeft","App","isLoggedIn"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-04-navigation/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getVariable, removeVariable } from \"./utils/validation\";\n\nimport Home from \"./Screens/Home\";\nimport Login from \"./Screens/LoginScreen\";\nimport Registration from \"./Screens/RegistrationScreen\";\nimport PostsScreen from \"./components/PostsScreen\";\nimport CreatePostsScreen from \"./Screens/CreatePostsScreen\";\nimport CommentsScreen from \"./Screens/CommentsScreen\";\nimport ProfileScreen from \"./Screens/ProfileScreen\";\n\nconst AuthStack = createStackNavigator();\nconst AuthNavigator = () => (\n  <AuthStack.Navigator\n    initialRouteName=\"Login\"\n    screenOptions={{ headerShown: false }}\n  >\n    <AuthStack.Screen name=\"Registration\" component={Registration} />\n    <AuthStack.Screen name=\"Login\" component={Login} />\n  </AuthStack.Navigator>\n);\n\nconst Tab = createBottomTabNavigator();\nconst TabNavigator = () => (\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n\n        if (route.name === \"Profile\") {\n          iconName = focused ? \"ios-person\" : \"ios-person\";\n        } else if (route.name === \"Add\") {\n          iconName = focused ? \"ios-add-circle\" : \"ios-add-circle-outline\";\n        } else if (route.name === \"Posts\") {\n          iconName = focused ? \"ios-grid\" : \"ios-grid\";\n        }\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n    })}\n    tabBarOptions={{\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"gray\",\n    }}\n  >\n    <Tab.Screen\n      name=\"Posts\"\n      component={PostsScreen}\n      options={{\n        title: \"Публікації\",\n        headerStyle: {\n          backgroundColor: \"#fff\",\n        },\n        headerTintColor: \"#212121\",\n        headerTitleStyle: {\n          fontWeight: \"500\",\n          fontSize: 18,\n          letterSpacing: -0.4,\n        },\n        headerRight: () => (\n          <Ionicons\n            name=\"ios-log-out\"\n            size={25}\n            color=\"grey\"\n            style={{ marginRight: 25 }}\n            onPress={() => {\n              removeVariable(\"entrance\");\n            }}\n          />\n        ),\n      }}\n    />\n    <Tab.Screen\n      name=\"Add\"\n      component={CreatePostsScreen}\n      options={{\n        title: \"Створити публікацію\",\n        headerStyle: {\n          backgroundColor: \"#fff\",\n        },\n        headerTintColor: \"#212121\",\n        headerTitleStyle: {\n          fontWeight: \"500\",\n          fontSize: 18,\n          letterSpacing: -0.4,\n        },\n        headerLeft: () => (\n          <Ionicons\n            name=\"ios-arrow-back\"\n            size={25}\n            color=\"grey\"\n            style={{ marginLeft: 25 }}\n          />\n        ),\n      }}\n    />\n    <Tab.Screen\n      name=\"Profile\"\n      component={ProfileScreen}\n      options={{ headerShown: false }}\n    />\n  </Tab.Navigator>\n);\n\nconst App = () => {\n  const isLoggedIn = getVariable(\"entrance\");\n\n  return (\n    <NavigationContainer>\n      {isLoggedIn ? <TabNavigator /> : <AuthNavigator />}\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}