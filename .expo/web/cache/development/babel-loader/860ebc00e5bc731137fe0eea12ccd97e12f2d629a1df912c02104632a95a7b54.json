{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Home from \"./Screens/Home\";\nimport Login from \"./Screens/LoginScreen\";\nimport Registration from \"./Screens/RegistrationScreen\";\nimport PostsScreen from \"./components/PostsScreen\";\nimport CreatePostsScreen from \"./Screens/CreatePostsScreen\";\nimport CommentsScreen from \"./Screens/CommentsScreen\";\nimport ProfileScreen from \"./Screens/ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tabs = createBottomTabNavigator();\nvar MainStack = createStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(MainStack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(MainStack.Screen, {\n        name: \"Registration\",\n        component: Registration,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(MainStack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }), _jsxs(Tabs.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n              var iconName;\n              if (route.name === \"Profile\") {\n                iconName = focused ? \"ios-person\" : \"ios-person\";\n              } else if (route.name === \"Add\") {\n                iconName = focused ? \"ios-add-circle\" : \"ios-add-circle-outline\";\n              } else if (route.name === \"Posts\") {\n                iconName = focused ? \"ios-grid\" : \"ios-grid\";\n              }\n              return _jsx(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            }\n          };\n        },\n        tabBarOptions: {\n          activeTintColor: \"tomato\",\n          inactiveTintColor: \"gray\"\n        },\n        children: [_jsx(Tabs.Screen, {\n          name: \"PostsScreen\",\n          component: PostsScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Tabs.Screen, {\n          name: \"CreatePostsScreen\",\n          component: CreatePostsScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Tabs.Screen, {\n          name: \"ProfileScreen\",\n          component: ProfileScreen,\n          options: {\n            headerShown: false\n          }\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createStackNavigator","createBottomTabNavigator","useNavigation","Ionicons","Home","Login","Registration","PostsScreen","CreatePostsScreen","CommentsScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Tabs","MainStack","App","children","Navigator","initialRouteName","Screen","name","component","options","headerShown","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","tabBarOptions","activeTintColor","inactiveTintColor"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-04-navigation/App.js"],"sourcesContent":["// import { StatusBar } from \"expo-status-bar\";\n// import { StyleSheet, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport Home from \"./Screens/Home\";\nimport Login from \"./Screens/LoginScreen\";\nimport Registration from \"./Screens/RegistrationScreen\";\nimport PostsScreen from \"./components/PostsScreen\";\nimport CreatePostsScreen from \"./Screens/CreatePostsScreen\";\nimport CommentsScreen from \"./Screens/CommentsScreen\";\nimport ProfileScreen from \"./Screens/ProfileScreen\";\n\nconst Tabs = createBottomTabNavigator();\nconst MainStack = createStackNavigator();\n// const navigation = useNavigation();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <MainStack.Navigator initialRouteName=\"Home\">\n        <MainStack.Screen\n          name=\"Registration\"\n          component={Registration}\n          options={{ headerShown: false }}\n        />\n        <MainStack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{ headerShown: false }}\n        />\n        <Tabs.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName;\n\n              if (route.name === \"Profile\") {\n                iconName = focused ? \"ios-person\" : \"ios-person\";\n              } else if (route.name === \"Add\") {\n                iconName = focused\n                  ? \"ios-add-circle\"\n                  : \"ios-add-circle-outline\";\n              } else if (route.name === \"Posts\") {\n                iconName = focused ? \"ios-grid\" : \"ios-grid\";\n              }\n              return <Ionicons name={iconName} size={size} color={color} />;\n            },\n          })}\n          tabBarOptions={{\n            activeTintColor: \"tomato\",\n            inactiveTintColor: \"gray\",\n          }}\n        >\n          <Tabs.Screen\n            name=\"PostsScreen\"\n            component={PostsScreen}\n            // onPress={() => navigation.navigate(\"PostsScreen\")}\n            options={{ headerShown: false }}\n          />\n          <Tabs.Screen\n            name=\"CreatePostsScreen\"\n            component={CreatePostsScreen}\n            // onPress={() => navigation.navigate(\"CreatePostsScreen\")}\n            options={{ headerShown: false }}\n          />\n          <Tabs.Screen\n            name=\"ProfileScreen\"\n            component={ProfileScreen}\n            // onPress={() => navigation.navigate(\"ProfileScreen\")}\n            options={{ headerShown: false }}\n          />\n        </Tabs.Navigator>\n        {/* <MainStack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{\n            title: \"Публікації\",\n            headerStyle: {\n              backgroundColor: \"#fff\",\n            },\n            headerTintColor: \"#212121\",\n            headerTitleStyle: {\n              fontWeight: \"500\",\n              fontSize: 18,\n              letterSpacing: -0.4,\n            },\n            headerRight: () => (\n              <Ionicons\n                name=\"ios-log-out\"\n                size={25}\n                color=\"grey\"\n                style={{ marginRight: 25 }}\n                // onPress={() => navigation.navigate(\"Login\")}\n              />\n            ),\n          }}\n        />\n        <MainStack.Screen\n          name=\"PostsScreen\"\n          component={PostsScreen}\n          options={{\n            title: \"Публікації\",\n            headerStyle: {\n              backgroundColor: \"#fff\",\n            },\n            headerTintColor: \"#212121\",\n            headerTitleStyle: {\n              fontWeight: \"500\",\n              fontSize: 18,\n              letterSpacing: -0.4,\n            },\n            headerRight: () => (\n              <Ionicons\n                name=\"ios-log-out\"\n                size={25}\n                color=\"grey\"\n                style={{ marginRight: 25 }}\n                // onPress={() => navigation.navigate(\"Login\")}\n              />\n            ),\n          }}\n        />\n        <MainStack.Screen\n          name=\"CreatePostsScreen\"\n          component={CreatePostsScreen}\n          options={{\n            title: \"Створити публікацію\",\n            headerStyle: {\n              backgroundColor: \"#fff\",\n            },\n            headerTintColor: \"#212121\",\n            headerTitleStyle: {\n              fontWeight: \"500\",\n              fontSize: 18,\n              letterSpacing: -0.4,\n            },\n            headerLeft: () => (\n              <Ionicons\n                name=\"ios-arrow-round-back\"\n                size={25}\n                color=\"grey\"\n                style={{ marginLeft: 25 }}\n                // onPress={() => navigation.navigate(\"Login\")}\n              />\n            ),\n          }}\n        />\n        <MainStack.Screen\n          name=\"CommentsScreen\"\n          component={CommentsScreen}\n          options={{\n            title: \"Коментарі\",\n            headerStyle: {\n              backgroundColor: \"#fff\",\n            },\n            headerTintColor: \"#212121\",\n            headerTitleStyle: {\n              fontWeight: \"500\",\n              fontSize: 18,\n              letterSpacing: -0.4,\n            },\n            headerLeft: () => (\n              <Ionicons\n                name=\"ios-arrow-round-back\"\n                size={25}\n                color=\"grey\"\n                style={{ marginLeft: 25 }}\n                // onPress={() => navigation.navigate(\"Login\")}\n              />\n            ),\n          }}\n        />\n        <MainStack.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{ headerShown: false }}\n        /> */}\n      </MainStack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}